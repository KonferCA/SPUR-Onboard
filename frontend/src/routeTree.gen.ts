/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as RegisterImport } from './pages/register'
import { Route as DashboardImport } from './pages/dashboard'
import { Route as CreateCompanyImport } from './pages/create-company'
import { Route as IndexImport } from './pages/index'
import { Route as ProjectSubmitImport } from './pages/project/submit'
import { Route as ProjectAllImport } from './pages/project/all'
import { Route as AdminProjectsImport } from './pages/admin/projects'
import { Route as AdminDashboardImport } from './pages/admin/dashboard'
import { Route as AdminProjectSubmissionImport } from './pages/admin/project.submission'
import { Route as AdminProjectDetailsImport } from './pages/admin/project.details'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const CreateCompanyRoute = CreateCompanyImport.update({
  id: '/create-company',
  path: '/create-company',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectSubmitRoute = ProjectSubmitImport.update({
  id: '/project/submit',
  path: '/project/submit',
  getParentRoute: () => rootRoute,
} as any)

const ProjectAllRoute = ProjectAllImport.update({
  id: '/project/all',
  path: '/project/all',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectsRoute = AdminProjectsImport.update({
  id: '/admin/projects',
  path: '/admin/projects',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectSubmissionRoute = AdminProjectSubmissionImport.update({
  id: '/admin/project/submission',
  path: '/admin/project/submission',
  getParentRoute: () => rootRoute,
} as any)

const AdminProjectDetailsRoute = AdminProjectDetailsImport.update({
  id: '/admin/project/details',
  path: '/admin/project/details',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-company': {
      id: '/create-company'
      path: '/create-company'
      fullPath: '/create-company'
      preLoaderRoute: typeof CreateCompanyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/projects': {
      id: '/admin/projects'
      path: '/admin/projects'
      fullPath: '/admin/projects'
      preLoaderRoute: typeof AdminProjectsImport
      parentRoute: typeof rootRoute
    }
    '/project/all': {
      id: '/project/all'
      path: '/project/all'
      fullPath: '/project/all'
      preLoaderRoute: typeof ProjectAllImport
      parentRoute: typeof rootRoute
    }
    '/project/submit': {
      id: '/project/submit'
      path: '/project/submit'
      fullPath: '/project/submit'
      preLoaderRoute: typeof ProjectSubmitImport
      parentRoute: typeof rootRoute
    }
    '/admin/project/details': {
      id: '/admin/project/details'
      path: '/admin/project/details'
      fullPath: '/admin/project/details'
      preLoaderRoute: typeof AdminProjectDetailsImport
      parentRoute: typeof rootRoute
    }
    '/admin/project/submission': {
      id: '/admin/project/submission'
      path: '/admin/project/submission'
      fullPath: '/admin/project/submission'
      preLoaderRoute: typeof AdminProjectSubmissionImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-company': typeof CreateCompanyRoute
  '/dashboard': typeof DashboardRoute
  '/register': typeof RegisterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/projects': typeof AdminProjectsRoute
  '/project/all': typeof ProjectAllRoute
  '/project/submit': typeof ProjectSubmitRoute
  '/admin/project/details': typeof AdminProjectDetailsRoute
  '/admin/project/submission': typeof AdminProjectSubmissionRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-company': typeof CreateCompanyRoute
  '/dashboard': typeof DashboardRoute
  '/register': typeof RegisterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/projects': typeof AdminProjectsRoute
  '/project/all': typeof ProjectAllRoute
  '/project/submit': typeof ProjectSubmitRoute
  '/admin/project/details': typeof AdminProjectDetailsRoute
  '/admin/project/submission': typeof AdminProjectSubmissionRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-company': typeof CreateCompanyRoute
  '/dashboard': typeof DashboardRoute
  '/register': typeof RegisterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/projects': typeof AdminProjectsRoute
  '/project/all': typeof ProjectAllRoute
  '/project/submit': typeof ProjectSubmitRoute
  '/admin/project/details': typeof AdminProjectDetailsRoute
  '/admin/project/submission': typeof AdminProjectSubmissionRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-company'
    | '/dashboard'
    | '/register'
    | '/admin/dashboard'
    | '/admin/projects'
    | '/project/all'
    | '/project/submit'
    | '/admin/project/details'
    | '/admin/project/submission'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-company'
    | '/dashboard'
    | '/register'
    | '/admin/dashboard'
    | '/admin/projects'
    | '/project/all'
    | '/project/submit'
    | '/admin/project/details'
    | '/admin/project/submission'
  id:
    | '__root__'
    | '/'
    | '/create-company'
    | '/dashboard'
    | '/register'
    | '/admin/dashboard'
    | '/admin/projects'
    | '/project/all'
    | '/project/submit'
    | '/admin/project/details'
    | '/admin/project/submission'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateCompanyRoute: typeof CreateCompanyRoute
  DashboardRoute: typeof DashboardRoute
  RegisterRoute: typeof RegisterRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminProjectsRoute: typeof AdminProjectsRoute
  ProjectAllRoute: typeof ProjectAllRoute
  ProjectSubmitRoute: typeof ProjectSubmitRoute
  AdminProjectDetailsRoute: typeof AdminProjectDetailsRoute
  AdminProjectSubmissionRoute: typeof AdminProjectSubmissionRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateCompanyRoute: CreateCompanyRoute,
  DashboardRoute: DashboardRoute,
  RegisterRoute: RegisterRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminProjectsRoute: AdminProjectsRoute,
  ProjectAllRoute: ProjectAllRoute,
  ProjectSubmitRoute: ProjectSubmitRoute,
  AdminProjectDetailsRoute: AdminProjectDetailsRoute,
  AdminProjectSubmissionRoute: AdminProjectSubmissionRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-company",
        "/dashboard",
        "/register",
        "/admin/dashboard",
        "/admin/projects",
        "/project/all",
        "/project/submit",
        "/admin/project/details",
        "/admin/project/submission"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-company": {
      "filePath": "create-company.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/admin/projects": {
      "filePath": "admin/projects.tsx"
    },
    "/project/all": {
      "filePath": "project/all.tsx"
    },
    "/project/submit": {
      "filePath": "project/submit.tsx"
    },
    "/admin/project/details": {
      "filePath": "admin/project.details.tsx"
    },
    "/admin/project/submission": {
      "filePath": "admin/project.submission.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
